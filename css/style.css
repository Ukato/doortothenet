/*
This is the primary style sheet for doortothe.net
*/

/* CSS Global Level Styles and Variables */
:root {
  --hex-height: 30vh;
  --hex-height-x2: calc(var(--hex-height) * 2);
  --hex-height-x5: calc(var(--hex-height) * 5);
  --hex-shift: calc(var(--hex-height) * -0.5);
  --hex-width: calc(var(--hex-height) * 0.57735);
  --hex-width-x2: calc(var(--hex-height-x2) * 0.57735);
  --hex-width-x5: calc(var(--hex-height-x5) * 0.57735);
  --hex-vertical-gap: 0.5rem;
  --hex-horizontal-gap: calc(var(--hex-vertical-gap) * 0.866);
  /* --primary-color: #333;
  --secondary-color: #fff; */
  --charcoal: hsla(214, 21%, 31%, 1);
  --heliotrope-gray: hsla(277, 10%, 66%, 1);
  --dark-orange: hsla(33, 94%, 49%, 1);
  --tea-green: hsla(94, 61%, 84%, 1);
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  background: var(--charcoal);
  font-family: 'Goldman', cursive;
  color: #fff;
  overflow: hidden;
}

/* CSS Element Level Styles */
header {
  display: flex;
  justify-content: center;
  align-items: center;
  position: fixed;
  top: calc(var(--hex-height) * -0.5);
  width: 100%;
  height: calc(var(--hex-height) * 0.5);
  z-index: 1;
}

header .hexagon:hover {
  transform: none;
  color: var(--charcoal);
  cursor: pointer;
}

main {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  width: 100%;
}

footer {
  display: flex;
  justify-content: center;
  align-items: center;
  position: fixed;
  bottom: calc(var(--hex-height) * -0.75);
  width: 100%;
}

footer .hexagon:hover {
  transform: none;
}

ul {
  list-style: none;
  max-height: 75vh;
  overflow-y: scroll;
  scrollbar-width: none;
  /* IE and Edge Support */
  -ms-overflow-style: none;
}

/* Chrome, Safari, and Opera support to hide scrollbar */
ul::-webkit-scrollbar {
  display: none;
}

li {
  margin: 0.4rem;
  padding: 0.2rem;
  font-size: 1.5rem;
}

a {
  padding: 0.4rem 0.2rem;
  text-decoration: none;
  color: var(--charcoal);
  font-size: inherit;
  text-transform: uppercase;
}

a:hover {
  color: var(--tea-green);
  transition: color 0.25s;
}

/* CSS Class Level Styles */
.title {
  margin: calc(var(--hex-height) * 0.05);
  padding: 0.5rem;
  font-weight: bold;
  text-transform: uppercase;
  font-size: calc(var(--hex-height) * 0.12);
}

.top-menu h2 {
  position: absolute;
  bottom: 0px;
}

.nav-arrows {
  position: absolute;
  margin-top: calc(var(--hex-height) * 0.05);
  top: 0px;
}

.main-nav {
  display: none;
}

.links {
  display: none;
}

/* Hexagon and Grid */

.hex-grid {
  margin-top: calc(var(--hex-height) * 0.15);
  display: grid;
  justify-items: center;
  position: relative;
  top: calc(var(--hex-height) * 0.5);
  grid-template-columns: repeat(5, calc(var(--hex-width) * 1.5));
  grid-gap: var(--hex-vertical-gap) var(--hex-horizontal-gap);
}

.hex-container {
  display: flex;
  flex-direction: column;
  position: relative;
  width: var(--hex-width);
  height: var(--hex-height);
  text-align: center;
  justify-content: center;
  align-items: center;
  transition: transform 0.5s;
}

.hexagon {
  display: flex;
  flex-direction: column;
  position: relative;
  background: var(--dark-orange);
  width: var(--hex-width);
  height: var(--hex-height);
  text-align: center;
  justify-content: center;
  align-items: center;
  transition: transform 0.5s;
}

.hexagon::before,
.hexagon::after {
  content: '';
  position: absolute;
  background: var(--dark-orange);
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.hexagon::before {
  transform: rotate(-60deg);
}

.hexagon::after {
  transform: rotate(60deg);
}

.hexagon::before:hover {
  background: red;
}

.hexagon > * {
  z-index: 1;
}

.shift-up {
  top: calc(var(--hex-shift) + (var(--hex-vertical-gap) * -0.5));
}

/* Hex Menu Toggle */
.toggle {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  cursor: pointer;
  z-index: 2;
  opacity: 0;
}

.close-btn {
  /* visibility: hidden; */
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  cursor: pointer;
  z-index: 1;
  opacity: 0;
}

.toggle:hover ~ div {
  transform: scale(1.1);
}

.toggle:checked {
  position: fixed;
  top: 50px;
  left: 50px;
  margin: 0;
  width: 50px;
  height: 50px;
  z-index: 5;
}

.toggle:checked + span {
  position: fixed;
  top: 50px;
  left: 50px;
  margin: 0;
  width: 50px;
  height: 50px;
  z-index: 4;
  opacity: 1;
}

.toggle:checked:hover ~ div {
  transform: scale(0.99);
}

.toggle:checked ~ div {
  position: fixed;
  /* name | duration | timing | delay | iteration | direction | fill-mode | play-state */
  animation: open-hex 2s ease-in-out 0s 1 normal forwards;
  z-index: 3;
}

@keyframes open-hex {
  0% {
    width: var(--hex-width-x2);
    height: var(--hex-height-x2);
    top: calc(-10vh - calc(var(--hex-height-x2) * 0.5));
    left: calc(50vw - calc(var(--hex-width-x2) * 0.5));
  }
  50% {
    width: var(--hex-width-x2);
    height: var(--hex-height-x2);
    top: calc(50vh - calc(var(--hex-height-x2) * 0.5));
    left: calc(50vw - calc(var(--hex-width-x2) * 0.5));
  }
  100% {
    width: var(--hex-width-x5);
    height: var(--hex-height-x5);
    top: calc(50vh - calc(var(--hex-height-x5) * 0.5));
    left: calc(50vw - calc(var(--hex-width-x5) * 0.5));
  }
}

.toggle:checked ~ div > h2 {
  display: none;
}

.toggle:checked ~ div > .main-nav,
.toggle:checked ~ div > .links {
  display: inline-block;
  opacity: 0;
  height: 0%;
  animation: show-links 1s ease-out 2s 1 normal forwards;
}

@keyframes show-links {
  0% {
    margin-top: 0rem;
  }
  100% {
    margin-top: 2rem;
    height: 40%;
    opacity: 1;
  }
}

.toggle:checked ~ div > .fas {
  font-size: 5rem;
  transition: all 1s;
}

/* CSS ID Level Styles */
#otaku {
  grid-area: 3 / 2;
}

#tech {
  grid-area: 3 / 4;
}